name: Apply tf changes
on:
  workflow_dispatch: {}
  push:
    branches:
    - '*'
    paths:
    - 'states/**'

jobs:
  check-changes:
    env:
      STATES_DIR: states
      CONFIG_FILE: ".config.yaml"
    runs-on: ubuntu-latest
    steps:
      - name: Install yq
        run: |
          sudo apt update && sudo apt install -y wget
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod a+x /usr/local/bin/yq

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get state directories
        id: changed-files
        uses: tj-actions/changed-files@v35
        with:
          files: ${{ env.STATES_DIR }}
          dir_names: true
          dir_names_max_depth: 2

      - run: |
          changed_dirs=(${{ steps.changed-files.outputs.all_changed_files }})
          
          # debug
          for dir in ${changed_dirs[@]}; do
            echo "$(basename $dir) changed"
          done
          
          if [ ${#changed_dirs[@]} -gt 1 ]; then
            echo "⛔️Only one state change per branch is supported, split your code changes."
            exit 1
          fi
          
          state_dir=${{ env.STATES_DIR }}/${changed_dirs[0]}
          
          config_file="$state_dir/${{ env.CONFIG_FILE }}"
          
          if [ ! -f $config_file ] ; then
            echo "⛔ config file not found - $config_file️"
            exit 1
          fi 
          
          owner=$(yq '.owner' $config_file)
          ttl=$(yq '.ttl' $config_file)
          expiration_time=$(date -d "+$ttl")
                 
          echo "YC_FOLDER_NAME=$state_dir" >> $GITHUB_ENV
          echo "YC_OWNER=$owner" >> $GITHUB_ENV
          echo "YC_FOLDER_EXPIRES=$expiration_time" >> $GITHUB_ENV
          

  yc-config:
    runs-on: ubuntu-latest
    needs:
      - check-changes
    steps:
      - name: Install yc
        run: |
          sudo apt update && sudo apt install -y curl
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash

      - name: Configure yc
        shell: bash
        run: |
          PATH="~/yandex-cloud/bin:$PATH"
          yc config profile create default
          yc config set token '{{ secrets.YC_TOKEN }}'
          yc config set cloud-id '{{ secrets.YC_CLOUD }}'
      
      - name: Get YC_FOLDER
        shell: bash
        run: |
          PATH="~/yandex-cloud/bin:$PATH"
          yc resource-manager folder create --name ${{ env.YC_FOLDER_NAME }} || exit 0
          yc resource-manager folder update --name ${{ env.YC_FOLDER_NAME }} --labels owner=${{ env.YC_OWNER }},expires=${{ env.YC_FOLDER_EXPIRES }}
          
