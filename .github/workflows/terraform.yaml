name: Run terraform
on:
  push:
    branches:
      - 'main'
    paths:
      - "states/**/*"
  pull_request:
    types:
      - labeled
      - synchronize
  workflow_dispatch:
    inputs:
      states_dir:
        description: states directory path"
        default: "states/<folder_name>"
        required: true
      operation:
        description: operation to perform
        required: true
        type: choice
        default: "apply"
        options:
          - "apply"
          - "destroy"
jobs:
  get-changed-state:
    runs-on: ubuntu-latest
    outputs:
      dir: ${{ github.event.inputs.states_dir || steps.changed-state.outputs.dir }}
    env:
      states_dir: states
    steps:
      - name: clean workspace
        uses: jstone28/runner-workspace-cleaner@v1.0.0

      - name: Checkout Code
        uses: actions/checkout@v3

      - id: changed-state
        uses: ./.github/actions/changes-state

  get-operation:
    runs-on: ubuntu-latest
    needs:
      - get-changed-state
    outputs:
      operation: ${{ github.event.inputs.operation || steps.operation.outputs.operation }}
    steps:
      - name: clean workspace
        uses: jstone28/runner-workspace-cleaner@v1.0.0

      - name: Checkout Code
        uses: actions/checkout@v3

      - id: operation
        uses: ./.github/actions/operation
        with:
          state_dir: ${{ needs.get-changed-state.outputs.dir }}


  plan:
    environment: plan
    runs-on: ubuntu-latest
    needs:
      - get-changed-state
      - get-operation
    if: ${{ needs.get-changed-state.outputs.dir }}
    steps:
      - name: clean workspace
        uses: jstone28/runner-workspace-cleaner@v1.0.0

      - name: Checkout Code
        uses: actions/checkout@v3

      - uses: ./.github/actions/terraform
        with:
          directory: ${{ needs.get-changed-state.outputs.dir }}
          operation: ${{ needs.get-operation.outputs.operation }}
          sa_key: ${{ secrets.SA_KEY }}
          state_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          state_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          github_token: ${{ secrets.GH_TOKEN }}

      - name: clean workspace
        if: always()
        uses: jstone28/runner-workspace-cleaner@v1.0.0

  apply:
    environment: apply
    runs-on: ubuntu-latest
    needs:
      - get-changed-state
      - get-operation
      - plan
    if: ${{ needs.get-changed-state.outputs.dir && ( contains(fromJSON('["push", "workflow_dispatch"]'), github.event_name)) }}
    steps:
      - name: clean workspace
        uses: jstone28/runner-workspace-cleaner@v1.0.0

      - name: Checkout Code
        uses: actions/checkout@v3

      - uses: ./.github/actions/terraform
        with:
          directory: ${{ needs.get-changed-state.outputs.dir }}
          operation: ${{ needs.get-operation.outputs.operation }}
          sa_key: ${{ secrets.SA_KEY }}
          state_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          state_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          github_token: ${{ secrets.GH_TOKEN }}
          apply_changes: "true"

      - name: clean workspace
        if: always()
        uses: jstone28/runner-workspace-cleaner@v1.0.0



