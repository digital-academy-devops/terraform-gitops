name: Run terraform plan
id: terraform
on:
  push:
    branches:
      - 'main'
  pull_request: {}
  workflow_dispatch:
    inputs:


jobs:
  get-changes:
    runs-on: ubuntu-latest
    outputs:
      states_dir: ${{ steps.state-changes.outputs.states_dir }}
      operation: ${{ steps.state-changes.outputs.operation }}
    env:
      states_dir: states
      config_file: .config.yaml
    steps:
      - name: clean workspace
        uses: jstone28/runner-workspace-cleaner@v1.0.0

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Get state directories
        id: changed-files
        uses: tj-actions/changed-files@v35
        with:
          files: ${{ env.states_dir }}
          dir_names: true
          dir_names_max_depth: 1

      - id: state-changes
        shell: bash
        run: |
          set -ex 
          changed_dirs=(${{ steps.changed-files.outputs.all_changed_files }})

          if [ ${#changed_dirs[@]} -eq 0 ]; then
            echo "No state changes found"
            exit 0
          else 
            # debug
            for dir in ${changed_dirs[@]}; do
              echo "$(basename $dir) changed"
            done

            if [ ${#changed_dirs[@]} -gt 1 ]; then
              echo "⛔️Only one state change per branch is supported, split your code changes."
              exit 1
            fi

            state_dir=${changed_dirs[0]}

            echo "states_dir=${changed_dirs[0]}" >> $GITHUB_OUTPUT
            echo "operation=apply" >> $GITHUB_OUTPUT
          fi

  plan:
    environment: plan
    runs-on: ubuntu-latest
    needs:
      - get-changes
    if: ${{ needs.get-changes.outputs.states_dir }}
    steps:
      - name: clean workspace
        uses: jstone28/runner-workspace-cleaner@v1.0.0

      - name: Checkout Code
        uses: actions/checkout@v3

      - uses: ./.github/actions/terraform
        with:
          directory: ${{ needs.get-changes.outputs.folder_name }}
          operation: ${{ needs.get-changes.outputs.operation }}
          sa_key: ${{ secrets.SA_KEY }}
          state_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          state_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: clean workspace
        if: always()
        uses: jstone28/runner-workspace-cleaner@v1.0.0

